<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8SDxUPEhAVFRUPFQ8PDxUPDw8PDw8PFRUWFhUVFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCgUKChoKBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACoASwDASIAAhEBAxEB/8QA
        GQAAAwEBAQAAAAAAAAAAAAAAAAECAwQH/8QAHRABAQEBAAMBAQEAAAAAAAAAAAECERIhMQNxQf/EABUB
        AQEAAAAAAAAAAAAAAAAAAAAC/8QAFBEBAAAAAAAAAAAAAAAAAAAAAP/aAAwDAQACEQMRAD8A8fAORaVC
        gAQgANDkGFSADHD4BdVBIgGshozpoDD9fqDt9gDycokIBUqpAeKpEayAXArg4CR1XC3PQA+M40mgKuZ0
        frfTACOCHQCKpIEqJPAKMcFgMlQooAAdASFYrJ8A/wAr/jRnmcq7oDOIuigNozqs6TrQAeaLQAOQlyAB
        YYBJ3IVAZ1tm+kWKxQURXabaDSQt/EZqrr0CCK6SB731IHAEgMAkQyArks/VpsBoQuk3QFMrmVcEASM6
        vVRAPK/GolbAjxo8asAjgFKArpWHmnwEBficwCZGkwvEPgJmBr1FM/0vv+AheIlf5AVzS8K2TaDO5pcV
        pFAFQcBFJpxPgCFZyuZXJ6BnMH4wxQZ/pUHSBXjS8avPwUGfjS4upoNRwFdAz1RIro8gLjWVnFwDAOAX
        iWopOgJeaUHAUpC8/AVhaMroJ16YtdVPQRxWPp2jMBVpGQFYXivhUGVhKFgAZIgWeSp5AWMv0v8AjXVZ
        2gzHFXSaCs0UQASeKFgHqoUfAQYsAKyooYGqJioAqF6vpmB9PyiQC+qxfaMmDaI1arvoQGZruE2AS4mK
        AACAaNLR+lBA6RAflCqVAvNPvpGVaBnq1LVOsggAQDoBAcFEAJ6PJBwGspcQuUDhgAcPpHALcLjTUQA4
        ODoAGCBpmjsQAaTausocoL4BKLQA6CA5Wdy1wn9IDPg4dpWgmwGVAl2oKgryhzSBQVouFKYFSOgC6cSu
        AyhplUAAALmlRkvFBSsJjTMBSbmH0dBPgXjVmDMNByAzOHvMhQAAAEq5pnSBqCzTkBefgsFpdBFym4aU
        gZ3NTWoBjSa+LPX3gEAATRKdSCyqZVAOLTIdsBzxUqTgLNJ2gBm+yANvIJioBqlSYKhpkE0C4qFKYMv2
        vtEp7vtILlNORKB1NPVSDT86q6rLNaQAYID6CKgocKaUBObVdG76c4CU0mBpp9TQJc0hWQO0jFBkrKYo
        DAADgPIuQX+fxfGf51qAhl0vMGkZtJWdA5Wk0xuk3QGEqgKgoKgCpmCetuMbGuL6AwCugMt/BnR6+AzP
        OkpugX+t9f1kOkBwyAEXDpQCPH07Ez1Qa8IyoMoaplUBMlLTTrMDlUnP1p4wE9O6Pxg5ASZdg6CpS1RA
        CQKIBrGcLmYCFeKk7oIVEqxAAl4rxg8YCLQd4m2AcHknp8BFJViQAEi84BJ8q5ADPUSe6QGVXIPGAjyJ
        dzE0GhAAndSAAjYABaVABI4AAlWAA4qAArJgAGWqABK/O+wAaWp6ACdJ4ABHKABlIABqnwACqdUAGZAA
        vPw7QAJFoAP/2Q==
</value>
  </data>
</root>